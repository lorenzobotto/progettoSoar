rl -s learning on # enable RL
indifferent-selection -g # MYFIX use epsilon-greedy decision making
indifferent-selection -e 0.1 # MYFIX 10% deviation from greedy

## Stato iniziale dell'agente

sp {propose*initialize-escape
  (state <s> -^impasse ^superstate nil)
  -->
  (<s> ^name escape)
  (<s> ^problem-space <p> ^desired <d> ^robot <r> ^uscita <u> ^oggetti <o1> <o2> <o3> <o4> <o5> ^ultima-azione azione)
  (<p> ^name escape)
  (<d> ^escaped yes)
  (<s> ^escaped no)
  (<r> ^altezza 150 ^posizione pietre ^braccio <b1> <b2> ^bracci-occupati 0)
  (<b1> ^name destro ^ha-oggetti nessuno)
  (<b2> ^name sinistro ^ha-oggetti nessuno)
  (<u> ^altezza 350 ^colpi 5)
  (<o1> ^name tronco1 ^altezza 100 ^posizionato no ^exists true)
  (<o2> ^name tronco2 ^altezza 100 ^posizionato no ^exists true)
  (<o3> ^name molla ^exists true)
  (<o4> ^name rametto ^exists true)
  (<o5> ^name pietre ^exists true)
}

## Proposta di movimento
sp {propose*movimento
  (state <s> ^robot <r> ^oggetti <o>)
  (<r> ^posizione <posRobot> ^bracci-occupati <numBO> {< 2 <numBO>})
  (<o> ^name <nomeOggetto> <> <posRobot> <> tronco1 <> tronco2 ^exists true)
  -->
  (<s> ^operator <op>)
  (<op> ^name movimento
        ^posizione <nomeOggetto>
  )
}

sp {propose*movimento-tronco
  (state <s> ^robot <r> ^oggetti <o>)
  (<r> ^posizione <posRobot> ^bracci-occupati 0)
  (<o> ^name <nomeOggetto> <> <posRobot> <> rametto <> pietre <> molla ^exists true)
  -->
  (<s> ^operator <op>)
  (<op> ^name movimento
        ^posizione <nomeOggetto>
  )
}

## Proposta di presa oggetto
sp {propose*presa-oggetto
  (state <s> ^robot <r> ^oggetti <o>)
  (<r> ^posizione <posRobot> <> tronco1 <> tronco2 ^braccio <b1> ^bracci-occupati <bo> {< 2 <bo>})
  (<b1> ^ha-oggetti nessuno)
  (<o> ^name <posRobot> ^exists true)
  -->
  (<s> ^operator <op>)
  (<op> ^name presa-oggetto
        ^oggetto <o>
        ^braccio <b1>
  )
}

## Proposta di presa oggetto
sp {propose*presa-oggetto-tronco
  (state <s> ^robot <r> ^oggetti <o>)
  (<r> ^posizione <posRobot> <> rametto <> pietre <> molla ^bracci-occupati 0)
  (<o> ^name <posRobot> ^posizionato no ^exists true)
  -->
  (<s> ^operator <op>)
  (<op> ^name presa-oggetto-tronco
        ^oggetto <o>
  )
}

## Proposta di posa oggetto
sp {propose*posa-oggetto
  (state <s> ^robot <r>)
  (<r> ^posizione <posRobot> <> tronco1 <> tronco2 ^braccio <b1>)
  (<b1> ^ha-oggetti <ogg> <> nessuno)
  (<ogg> ^name <nomeOggetto> <> fionda <> ramettopietre <> mollapietre)
  -->
  (<s> ^operator <op>)
  (<op> ^name posa-oggetto
        ^oggetto <ogg>
        ^braccio <b1>
  )
}

## Proposta di posa oggetto
sp {propose*posa-oggetto-tronco
  (state <s> ^robot <r>)
  (<r> ^posizione <posRobot> <> rametto <> pietre <> molla ^bracci-occupati 2 ^braccio <b1>)
  (<b1> ^name destro ^ha-oggetti <ogg>)
  -->
  (<s> ^operator <op>)
  (<op> ^name posa-oggetto-tronco
        ^oggetto <ogg>
        ^braccio <b1>
  )
}

## Proposta di creazione
sp {propose*combina-fionda
  (state <s> ^robot <r>)
  (<r> ^braccio <b1> <b2>)
  (<b1> ^ha-oggetti <ogg1>)
  (<b2> ^ha-oggetti <ogg2>)
  (<ogg1> ^name rametto)
  (<ogg2> ^name molla)
  -->
  (<s> ^operator <op>)
  (<op> ^name combina-fionda)
}

sp {propose*combina-ramettopietre
  (state <s> ^robot <r>)
  (<r> ^braccio <b1> <b2>)
  (<b1> ^ha-oggetti <ogg1>)
  (<b2> ^ha-oggetti <ogg2>)
  (<ogg1> ^name rametto)
  (<ogg2> ^name pietre)
  -->
  (<s> ^operator <op>)
  (<op> ^name combina-ramettopietre)
}

sp {propose*combina-mollapietre
  (state <s> ^robot <r>)
  (<r> ^braccio <b1> <b2>)
  (<b1> ^ha-oggetti <ogg1>)
  (<b2> ^ha-oggetti <ogg2>)
  (<ogg1> ^name molla)
  (<ogg2> ^name pietre)
  -->
  (<s> ^operator <op>)
  (<op> ^name combina-mollapietre)
}

sp {propose*scomponi-ramettopietre
   (state <s> ^robot <r>)
   (<r> ^braccio <b1> ^bracci-occupati 1)
   (<b1> ^ha-oggetti <ogg1>)
   (<ogg1> ^name ramettopietre)
-->
   (<s> ^operator <opNew>)
   (<opNew> ^name scomponi-ramettopietre)
}

sp {propose*scomponi-mollapietre
   (state <s> ^robot <r>)
   (<r> ^braccio <b1> ^bracci-occupati 1)
   (<b1> ^ha-oggetti <ogg1>)
   (<ogg1> ^name mollapietre)
-->
   (<s> ^operator <opNew>)
   (<opNew> ^name scomponi-mollapietre)
}

sp {propose*scomponi-fionda
   (state <s> ^robot <r>)
   (<r> ^braccio <b1> ^bracci-occupati 1)
   (<b1> ^ha-oggetti <ogg1>)
   (<ogg1> ^name fionda)
-->
   (<s> ^operator <opNew>)
   (<opNew> ^name scomponi-fionda)
}

sp {propose*carica-fionda
   (state <s> ^robot <r>)
   (<r> ^braccio <b1> <b2>)
   (<b1> ^ha-oggetti <ogg1>)
   (<b2> ^ha-oggetti.name pietre)
   (<ogg1> ^name fionda ^carica false)
-->
   (<s> ^operator <op>)
   (<op> ^name carica-fionda)
}

sp {propose*colpisci-ovunque
   (state <s> ^robot <r> ^uscita <u>)
   (<r> ^braccio <b1>)
   (<b1> ^ha-oggetti <ogg1>)
   (<ogg1> ^name fionda ^carica true)
   (<u> ^colpi <numColpi> {> 0 <numColpi>})
-->
   (<s> ^operator <op>)
   (<op> ^name colpisci-ovunque)
}

sp {propose*colpisci-estremita
   (state <s> ^robot <r> ^uscita <u>)
   (<r> ^braccio <b1>)
   (<b1> ^ha-oggetti <ogg1>)
   (<ogg1> ^name fionda ^carica true)
   (<u> ^colpi <numColpi> {> 0 <numColpi>})
-->
   (<s> ^operator <op>)
   (<op> ^name colpisci-estremita)
}

sp {propose*posiziona-tronco
   (state <s> ^robot <robot> ^oggetti <o2> <o3>)
   (<robot> ^braccio <b1> <b2>)
   (<b1> ^name destro ^ha-oggetti <o1> <> nessuno)
   (<b2> ^name sinistro ^ha-oggetti <o1> <> nessuno)
   (<o2> ^name tronco1 ^posizionato no)
   (<o3> ^name tronco2 ^posizionato no)
-->
   (<s> ^operator <op>)
   (<op> ^name posiziona-tronco)
}

sp {propose*posiziona-tronco-sopra
   (state <s> ^robot <robot> ^oggetti <o1>)
   (<robot> ^braccio <b1> <b2>)
   (<b1> ^name destro ^ha-oggetti <o2> <> nessuno)
   (<b2> ^name sinistro ^ha-oggetti <o2> <> nessuno)
   (<o1> ^name <nomeOggetto> <> rametto <> pietre <> molla ^posizionato si ^exists false)
-->
   (<s> ^operator <op>)
   (<op> ^name posiziona-tronco-sopra)
}

sp {propose*arrampicatiedesci
   (state <s> ^robot <r> ^uscita <u> ^oggetti <o1> <o2>)
   (<u> ^colpi 0)
   (<o1> ^name tronco1 ^posizionato si)
   (<o2> ^name tronco2 ^posizionato si)
-->
   (<s> ^operator <op>)
   (<op> ^name arrampicatiedesci)
}

## RL iniziali
sp {rl*movimento
   (state <s> ^operator <op> +)
   (<op> ^name movimento)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*presa-oggetto
   (state <s> ^operator <op> +)
   (<op> ^name presa-oggetto)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*presa-oggetto-tronco
   (state <s> ^operator <op> +)
   (<op> ^name presa-oggetto-tronco)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*posa-oggetto
   (state <s> ^operator <op> +)
   (<op> ^name posa-oggetto)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*posa-oggetto-tronco
   (state <s> ^operator <op> +)
   (<op> ^name posa-oggetto-tronco)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*combina-fionda
   (state <s> ^operator <op> +)
   (<op> ^name combina-fionda)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*combina-ramettopietre
   (state <s> ^operator <op> +)
   (<op> ^name combina-ramettopietre)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*combina-mollapietre
   (state <s> ^operator <op> +)
   (<op> ^name combina-mollapietre)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*scomponi-ramettopietre
   (state <s> ^operator <op> +)
   (<op> ^name scomponi-ramettopietre)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*scomponi-mollapietre
   (state <s> ^operator <op> +)
   (<op> ^name scomponi-mollapietre)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*scomponi-fionda
   (state <s> ^operator <op> +)
   (<op> ^name scomponi-fionda)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*carica-fionda
   (state <s> ^operator <op> +)
   (<op> ^name carica-fionda)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*colpisci-ovunque
   (state <s> ^operator <op> +)
   (<op> ^name colpisci-ovunque)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*colpisci-estremita
   (state <s> ^operator <op> +)
   (<op> ^name colpisci-estremita)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*posiziona-tronco
   (state <s> ^operator <op> +)
   (<op> ^name posiziona-tronco)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*posiziona-tronco-sopra
   (state <s> ^operator <op> +)
   (<op> ^name posiziona-tronco-sopra)
-->
   (<s> ^operator <op> = 0)
}

sp {rl*arrampicatiedesci
   (state <s> ^operator <op> +)
   (<op> ^name arrampicatiedesci)
-->
   (<s> ^operator <op> = 0)
}

# Applica movimento
sp {apply*movimento
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione>)
   (<op> ^name movimento ^posizione <posNuova>)
   (<r> ^posizione <posRobot>)
-->
   (<r> ^posizione <posRobot> - <posNuova> +)
   (<s> ^ultima-azione <ultimaAzione> - movimento +)
   (write (crlf) |Mi sono spostato verso l'oggetto: | <posNuova> |.|)
}

sp {apply*presa-oggetto
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione>)
   (<r> ^bracci-occupati <numBO>)
   (<op> ^name presa-oggetto ^braccio <b1> ^oggetto <og>)
   (<og> ^name <nomeOggetto>)
   (<b1> ^name <nomeBraccio>)
-->
   (<b1> ^ha-oggetti <og> + nessuno -)
   (<og> ^exists true - false +)
   (<r> ^bracci-occupati <numBO> - (+ <numBO> 1) +)
   (<s> ^ultima-azione <ultimaAzione> - presa-oggetto +)
   (write (crlf) |Ho preso nel braccio | <nomeBraccio> | l'oggetto: | <nomeOggetto> |.|)
}

sp {apply*presa-oggetto-tronco
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione>)
   (<r> ^braccio <b1> <b2>)
   (<b1> ^name destro)
   (<b2> ^name sinistro)
   (<op> ^name presa-oggetto-tronco ^oggetto <og>)
   (<og> ^name <nomeOggetto>)
-->
   (<b1> ^ha-oggetti <og> + nessuno -)
   (<b2> ^ha-oggetti <og> + nessuno -)
   (<og> ^exists true - false +)
   (<r> ^bracci-occupati 0 - 2 +)
   (<s> ^ultima-azione <ultimaAzione> - presa-oggetto +)
   (write (crlf) |Ho preso il | <nomeOggetto> | con entrambe le braccia.|)
}

sp {apply*posa-oggetto
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione> ^oggetti <ogg>)
   (<r> ^bracci-occupati <numBO>)
   (<op> ^name posa-oggetto ^braccio <b1> ^oggetto <ogg>)
   (<ogg> ^name <nomeOggetto>)
   (<b1> ^name <nomeBraccio>)
-->
  (<b1> ^ha-oggetti <ogg> - nessuno +)
  (<ogg> ^exists false - true +)
  (<r> ^bracci-occupati <numBO> - (- <numBO> 1) +)
  (<s> ^ultima-azione <ultimaAzione> - posa-oggetto +)
  (write (crlf) |Ho posato l'oggetto | <nomeOggetto> | che avevo nel braccio | <nomeBraccio> |.|)
}

sp {apply*posa-oggetto-tronco
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione> ^oggetti <ogg>)
   (<r> ^braccio <b1> <b2>)
   (<b1> ^name destro)
   (<b2> ^name sinistro)
   (<op> ^name posa-oggetto-tronco ^oggetto <ogg>)
   (<ogg> ^name <nomeOggetto>)
   (<b1> ^name <nomeBraccio>)
-->
  (<b1> ^ha-oggetti <ogg> - nessuno +)
  (<b2> ^ha-oggetti <ogg> - nessuno +)
  (<ogg> ^exists false - true +)
  (<r> ^bracci-occupati 2 - 0 +)
  (<s> ^ultima-azione <ultimaAzione> - posa-oggetto-tronco +)
  (write (crlf) |Ho posato l'oggetto | <nomeOggetto> | che avevo in entrambe le braccia.|)
}

# Applica combinazione
sp {apply*combina-ramettopietre
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione>)
   (<op> ^name combina-ramettopietre)
   (<r> ^braccio <b1> <b2>)
   (<b1> ^name destro ^ha-oggetti <ob1>)
   (<ob1> ^name <ogg1Nome>)
   (<b2> ^name sinistro ^ha-oggetti <ob2>)
   (<ob2> ^name <ogg2Nome>)
-->
   (<b1> ^ha-oggetti <ob1> -)
   (<b2> ^ha-oggetti <ob2> - nessuno +)
   (<b1> ^ha-oggetti <ob1New> +)
   (<ob1New> ^name ramettopietre)
   (<r> ^bracci-occupati 2 - 1 +)
   (<s> ^ultima-azione <ultimaAzione> - combina-ramettopietre +)
   (write (crlf) |Ho combinato l'oggetto: rametto con l'oggetto: pietre.|)
}

sp {apply*combina-fionda
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione>)
   (<op> ^name combina-fionda)
   (<r> ^braccio <b1> <b2>)
   (<b1> ^name destro ^ha-oggetti <ob1>)
   (<ob1> ^name <ogg1Nome>)
   (<b2> ^name sinistro ^ha-oggetti <ob2>)
   (<ob2> ^name <ogg2Nome>)
-->
   (<b1> ^ha-oggetti <ob1> -)
   (<b2> ^ha-oggetti <ob2> - nessuno +)
   (<b1> ^ha-oggetti <ob1New> +)
   (<ob1New> ^name fionda ^carica false)
   (<r> ^bracci-occupati 2 - 1 +)
   (<s> ^ultima-azione <ultimaAzione> - combina-fionda +)
   (write (crlf) |Ho combinato l'oggetto: rametto con l'oggetto: molla.|)
}

sp {apply*combina-mollapietre
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione>)
   (<op> ^name combina-mollapietre)
   (<r> ^braccio <b1> <b2>)
   (<b1> ^name destro ^ha-oggetti <ob1>)
   (<ob1> ^name <ogg1Nome>)
   (<b2> ^name sinistro ^ha-oggetti <ob2>)
   (<ob2> ^name <ogg2Nome>)
-->
   (<b1> ^ha-oggetti <ob1> -)
   (<b2> ^ha-oggetti <ob2> - nessuno +)
   (<b1> ^ha-oggetti <ob1New> +)
   (<ob1New> ^name mollapietre)
   (<r> ^bracci-occupati 2 - 1 +)
   (<s> ^ultima-azione <ultimaAzione> - combina-mollapietre +)
   (write (crlf) |Ho combinato l'oggetto: molla con l'oggetto: pietre.|)
}

# Applica scomposizioni
sp {apply*scomponi-mollapietre
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione> ^oggetti <o1> <o2>)
   (<op> ^name scomponi-mollapietre)
   (<r> ^braccio <b1> ^bracci-occupati <numBO>)
   (<b1> ^ha-oggetti <ob1>)
   (<ob1> ^name mollapietre)
   (<o1> ^name molla)
   (<o2> ^name pietre)
-->
   (<b1> ^ha-oggetti <ob1> - nessuno +)
   (<r> ^bracci-occupati <numBO> - (- <numBO> 1) +)
   (<o1> ^exists false - true +)
   (<o2> ^exists false - true +)
   (<s> ^ultima-azione <ultimaAzione> - scomponi-mollapietre +)
   (write (crlf) |Ho scomposto l'oggetto: molla con l'oggetto: pietre.|)
}

sp {apply*scomponi-ramettopietre
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione> ^oggetti <o1> <o2>)
   (<op> ^name scomponi-ramettopietre)
   (<r> ^braccio <b1> ^bracci-occupati <numBO>)
   (<b1> ^ha-oggetti <ob1>)
   (<ob1> ^name ramettopietre)
   (<o1> ^name rametto)
   (<o2> ^name pietre)
-->
   (<b1> ^ha-oggetti <ob1> - nessuno +)
   (<r> ^bracci-occupati <numBO> - (- <numBO> 1) +)
   (<o1> ^exists false - true +)
   (<o2> ^exists false - true +)
   (<s> ^ultima-azione <ultimaAzione> - scomponi-ramettopietre +)
   (write (crlf) |Ho scomposto l'oggetto: rametto con l'oggetto: pietre.|)
}

sp {apply*scomponi-fionda
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione> ^oggetti <o1> <o2>)
   (<op> ^name scomponi-fionda)
   (<r> ^braccio <b1> ^bracci-occupati <numBO>)
   (<b1> ^ha-oggetti <ob1>)
   (<ob1> ^name fionda)
   (<o1> ^name rametto)
   (<o2> ^name molla)
-->
   (<b1> ^ha-oggetti <ob1> - nessuno +)
   (<r> ^bracci-occupati <numBO> - (- <numBO> 1) +)
   (<o1> ^exists false - true +)
   (<o2> ^exists false - true +)
   (<s> ^ultima-azione <ultimaAzione> - scomponi-fionda +)
   (write (crlf) |Ho scomposto l'oggetto fionda.|)
}

# Applica carica fionda
sp {apply*carica-fionda
   (state <s> ^robot <r> ^operator <op> ^ultima-azione <ultimaAzione>)
   (<op> ^name carica-fionda)
   (<r> ^braccio <b1> <b2>)
   (<b1> ^ha-oggetti <ob1>)
   (<b2> ^ha-oggetti <ob2>)
   (<ob2> ^name pietre)
   (<ob1> ^name fionda ^carica false)
-->
   (<ob1> ^carica false - true +)
   (<b2> ^ha-oggetti <ob2> - nessuno +)
   (<s> ^ultima-azione <ultimaAzione> - carica-fionda +)
   (write (crlf) |Ho caricato la fionda.|)
}

# Applica colpisci
sp {apply*colpisci-ovunque
   (state <s>  ^operator <op>
               ^ultima-azione <ultimaAzione>
               ^uscita <u>
               ^robot <r>
               ^oggetti <o>
   )
   (<u> ^colpi <numColpi>)
   (<op> ^name colpisci-ovunque)
   (<r> ^braccio.ha-oggetti <ob>)
   (<ob> ^name fionda)
   (<o> ^name pietre)
-->
   (<ob> ^carica true - false +)
   (<o> ^exists true + false -)
   (<r> ^bracci-occupati 2 - 1 +)
   (<s> ^ultima-azione <ultimaAzione> - colpisci-ovunque +)
   (write (crlf) |Ho colpito la finestra NON nell'estremità. Colpi rimanenti: | <numColpi> |.|)
}

sp {apply*colpisci-estremita
  (state <s>   ^operator <op>
               ^uscita <u>
               ^robot <r>
               ^ultima-azione <ultimaAzione>
               ^oggetti <o>
   )
   (<op> ^name colpisci-estremita)
   (<r> ^braccio.ha-oggetti <ob>)
   (<ob> ^name fionda)
   (<u> ^colpi <numColpi>)
   (<o> ^name pietre)
-->
   (<u> ^colpi (- <numColpi> 1) + <numColpi> -)
   (<ob> ^carica true - false +)
   (<o> ^exists true + false -)
   (<r> ^bracci-occupati 2 - 1 +)
   (<s> ^ultima-azione <ultimaAzione> - colpisci-estremita +)
   (write (crlf) |Ho colpito la finestra nell'estremità. Colpi rimanenti: | (- <numColpi> 1) |.|)
}

# Applica combinazione tronchi per uscire
sp {apply*posiziona-tronco
   (state <s> ^robot <robot> ^operator <op> ^oggetti <o1> ^ultima-azione <ultimaAzione>)
   (<op> ^name posiziona-tronco)
   (<robot> ^braccio <b1> <b2>)
   (<b1> ^name destro ^ha-oggetti <o1>)
   (<b2> ^name sinistro ^ha-oggetti <o1>)
-->
   (<b1> ^ha-oggetti <o1> - nessuno +)
   (<b2> ^ha-oggetti <o1> - nessuno +)
   (<o1> ^posizionato si + no -)
   (<robot> ^bracci-occupati 2 - 0 +)
   (<s> ^ultima-azione <ultimaAzione> - posiziona-tronco +)
   (write (crlf) |Ho posizionato il tronco vicino all'uscita.|)
}

sp {apply*posiziona-tronco-sopra
   (state <s> ^robot <robot> ^operator <op> ^oggetti <o1> ^ultima-azione <ultimaAzione>)
   (<op> ^name posiziona-tronco-sopra)
   (<robot> ^braccio <b1> <b2>)
   (<b1> ^name destro ^ha-oggetti <o1>)
   (<b2> ^name sinistro ^ha-oggetti <o1>)
-->
   (<b1> ^ha-oggetti <o1> - nessuno +)
   (<b2> ^ha-oggetti <o1> - nessuno +)
   (<o1> ^posizionato si + no -)
   (<robot> ^bracci-occupati 2 - 0 +)
   (<s> ^ultima-azione <ultimaAzione> - posiziona-tronco-sopra +)
   (write (crlf) |Ho posizionato il tronco vicino all'uscita e sopra l'altro tronco.|)
}

# Applica arrampicati ed esci
sp {apply*arrampicatiedesci
   (state <s> ^operator <op> ^ultima-azione <ultimaAzione>)
   (<op> ^name arrampicatiedesci)
-->
   (<s> ^escaped yes + no -)
   (<s> ^ultima-azione <ultimaAzione> - arrampicatiedesci +)
   (write (crlf) |Mi sono arrampicato sui tronchi e sono uscito dalla finestra che ho spaccato.|)
}

# Elaboro i reward
sp {elaborate*reward-posa-oggetto
   (state <s> ^reward-link <r>
              ^ultima-azione posa-oggetto
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value -0.5)
}

sp {elaborate*reward-combina-fionda
   (state <s> ^reward-link <r>
              ^ultima-azione combina-fionda
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value 1)
}

sp {elaborate*reward-combina-mollapietre
   (state <s> ^reward-link <r>
              ^ultima-azione combina-mollapietre
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value -1)
}

sp {elaborate*reward-combina-ramettopietre
   (state <s> ^reward-link <r>
              ^ultima-azione combina-ramettopietre
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value -1)
}

sp {elaborate*reward-scomponi-fionda
   (state <s> ^reward-link <r>
              ^ultima-azione scomponi-fionda
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value -2)
}

sp {elaborate*reward-scomponi-mollapietre
   (state <s> ^reward-link <r>
              ^ultima-azione scomponi-mollapietre
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value -2)
}

sp {elaborate*reward-scomponi-ramettopietre
   (state <s> ^reward-link <r>
              ^ultima-azione scomponi-ramettopietre
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value -2)
}

sp {elaborate*reward-posiziona-tronco-sopra
   (state <s> ^reward-link <r>
              ^ultima-azione posiziona-tronco
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value 1)
}

sp {elaborate*reward-posiziona-tronco
   (state <s> ^reward-link <r>
              ^ultima-azione posiziona-tronco-sopra
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value 1)
}

sp {elaborate*reward-carica-fionda
   (state <s> ^reward-link <r>
              ^ultima-azione carica-fionda
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value 1)
}

sp {elaborate*reward-colpisci-estremita
   (state <s> ^reward-link <r>
              ^ultima-azione colpisci-estremita
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value 1)
}

sp {elaborate*reward-arrampicatiedesci
   (state <s> ^reward-link <r>
              ^ultima-azione arrampicatiedesci
   )
-->
   (<r> ^reward <rr>)
   (<rr> ^value 1)
}

# Condizione di terminazione
sp {evaluate*state*success
  (state <s> ^desired <d> )
  (<d> ^escaped <val>)
  (<s> ^escaped <val>)
  -->
  (<s> ^success <d>)
}

sp {top-goal*halt-state-success
    :default
  (state <s>  ^desired <eb>) 
  (<s> ^success <eb>)
  -->
  (write (crlf)  |Goal terminato con successo.| )
  (halt)
}